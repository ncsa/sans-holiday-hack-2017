Multiple solutions:

Use the linker to run the binary:

    elf@784e43534178:~$ ldd CandyCaneStriper 
    linux-vdso.so.1 =>  (0x00007ffe4047d000)
    libpython2.7.so.1.0 => /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0 (0x00007f50ee532000)
    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f50ee168000)
    libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f50edf4b000)
    libz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f50edd31000)
    libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f50edb2d000)
    libutil.so.1 => /lib/x86_64-linux-gnu/libutil.so.1 (0x00007f50ed92a000)
    libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f50ed621000)
    /lib64/ld-linux-x86-64.so.2 (0x00007f50eeac0000)

that ld-blahblah.so is like the 'perl' or 'python' equivalent for binaries:

    elf@784e43534178:~$ /lib64/ld-linux-x86-64.so.2
    Usage: ld.so [OPTION]... EXECUTABLE-FILE [ARGS-FOR-PROGRAM...]
    You have invoked `ld.so', the helper program for shared library executables.
    This program usually lives in the file `/lib/ld.so', and special directives
    in executable files using ELF shared libraries tell the system's program
    loader to load the helper program from this file.  This helper program loads
    the shared libraries needed by the program executable, prepares the program
    to run, and runs it.  You may invoke this helper program directly from the
    command line to load and run an ELF executable file; this is like executing
    that file itself, but always uses this helper program from the file you
    specified, instead of the helper program file specified in the executable
    file you run.  This is mostly of use for maintainers to test new versions
    of this helper program; chances are you did not intend to run this program.
      --list                list all dependencies and how they are resolved
      --verify              verify that given object really is a dynamically linked
                            object we can handle
      --inhibit-cache       Do not use /etc/ld.so.cache
      --library-path PATH   use given PATH instead of content of the environment
                            variable LD_LIBRARY_PATH
      --inhibit-rpath LIST  ignore RUNPATH and RPATH information in object names
                            in LIST
      --audit LIST          use objects named in LIST as auditors

    elf@784e43534178:~$ /lib64/ld-linux-x86-64.so.2 ./CandyCaneStriper 


overwrite an executable file with the existing binary.

    elf@784e43534178:~$ ls -l /bin/chmod
    -rwxr-xr-x 1 root root 0 Dec 15 20:00 /bin/chmod
    elf@784e43534178:~$ cp /bin/new .
    elf@784e43534178:~$ cat CandyCaneStriper  >> new
    elf@784e43534178:~$ ls -l
    total 96
    -rw-r--r-- 1 root root 45224 Dec 15 19:59 CandyCaneStriper
    -rwxr-xr-x 1 elf  elf  45224 Dec 17 00:15 new
    elf@784e43534178:~$ ./new


Use python to chmod.  The chmod binary is just a wrapper around the chmod libc
function.  Any programming language will have this available:

    >>> import os
    >>> os.chmod("CandyCaneStriper", 0755)
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    OSError: [Errno 1] Operation not permitted: 'CandyCaneStriper'

FAIL :(  What if make a copy first?

    elf@784e43534178:~$ cp CandyCaneStriper c
    elf@784e43534178:~$ python
    Python 2.7.12 (default, Nov 20 2017, 18:23:56) 
    [GCC 5.4.0 20160609] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>> import os
    >>> os.chmod("c", 0755)
    >>> ^d
    elf@784e43534178:~$ ./c


with perl:

    elf@784e43534178:~$ cp CandyCaneStriper c
    elf@784e43534178:~$ cat > fix.pl
    chmod 0755 "c";
    ^d
    elf@784e43534178:~$ perl fix.pl 
    String found where operator expected at fix.pl line 1, near "0755 "c""
            (Missing operator before  "c"?)
    syntax error at fix.pl line 1, near "0755 "c""
    Execution of fix.pl aborted due to compilation errors.
    elf@784e43534178:~$ cat > fix.pl
    chmod 0755, "c";
    ^d
    elf@784e43534178:~$ perl fix.pl 
    elf@784e43534178:~$ ./c

Or as a perl one liner, now that we figured out the syntax:

    elf@784e43534178:~$ cp CandyCaneStriper c
	elf@784e43534178:~$ perl -e 'chmod 0755, "c"'
