* Winconceivable: The Cliffs of Winsanity
  :PROPERTIES:
  :END:

** Question
   :PROPERTIES:
   :CUSTOM_ID: question
   :END:

#+BEGIN_EXAMPLE
                    ___,@
                   /  <
              ,_  /    \  _,
          ?    \`/______\`/
       ,_(_).  |; (e  e) ;|
        \___ \ \/\   7  /\/    _\8/_
            \/\   \'=='/      | /| /|
             \ \___)--(_______|//|//|
              \___  ()  _____/|/_|/_|
                 /  ()  \    `----'
                /   ()   \
               '-.______.-'
       jgs   _    |_||_|    _
            (@____) || (____@)
             \______||______/


    My name is Sparkle Redberry, and I need your help.
    My server is atwist, and I fear I may yelp.
    Help me kill the troublesome process gone awry.
    I will return the favor with a gift before nigh.


    Kill the "santaslittlehelperd" process to complete this challenge.
#+END_EXAMPLE

** How to find the terminal
   :PROPERTIES:
   :CUSTOM_ID: how-to-find-the-terminal
   :END:

From this game: https://2017.holidayhackchallenge.com/game/3e813a9c-cb34-492e-a317-0dd99c8ca2e7
Direct link: https://docker2017.holidayhackchallenge.com/?challenge=82c16868-a96e-4e4c-955e-5b41f7c5809a&uid=USER_ID

** Background Information
   :PROPERTIES:
   :CUSTOM_ID: background-information
   :END:

#+BEGIN_SRC sh
elf@d0b100094698:~$ D="------"; echo "$D System info:"; uname -a; cat /etc/issue; echo "$D Differences from skeleton home directory:"; diff -r /etc/skel .; echo "$D Who am I?"; id; echo "$D Running procs:"; ps axf
------ System info:
Linux d0b100094698 4.9.0-4-amd64 #1 SMP Debian 4.9.65-3 (2017-12-03) x86_64 x86_64 x86_64 GNU/Linux
Ubuntu 16.04.3 LTS \n \l
------ Differences from skeleton home directory:
diff -r /etc/skel/.bashrc ./.bashrc
81c81,84
< 
---
>     alias kill='true'
>     alias killall='true'
>     alias pkill='true'
>     alias skill='true'
117a121,122
> PATH=$PATH:/usr/games
> cat /etc/motd
------ Who am I?
uid=1000(elf) gid=1000(elf) groups=1000(elf)
------ Running procs:
  PID TTY      STAT   TIME COMMAND
    1 pts/0    Ss     0:00 /bin/bash /sbin/init
    8 pts/0    S      0:00 /usr/bin/santaslittlehelperd
   11 pts/0    S      0:00 /sbin/kworker
   18 pts/0    S      0:01  \_ /sbin/kworker
   12 pts/0    S      0:00 /bin/bash
  994 pts/0    R+     0:00  \_ ps axf
#+END_SRC

We see that =/usr/bin/santaslittlehelperd= is running, and we're told
that we need to kill it. However, we see that in our =.bashrc= file,
=kill= and its variants are aliased to =true=, which has no effect.

** Goal
   :PROPERTIES:
   :CUSTOM_ID: goal
   :END:

We need to =kill santaslittlehelperd=, but our =kill= has been turned ineffective.

** Hints
   :PROPERTIES:
   :CUSTOM_ID: hints
   :END:

[[https://twitter.com/GlitteryElf][Sparkle Redberry on Twitter has some hints]]
  * [[https://twitter.com/GlitteryElf/status/938539753372237824][Dear #lazyweb: How do I fix a malicious alias on my Linux box? It seems to be stopping me from killing processes...]]
  * [[https://twitter.com/GlitteryElf/status/938540163726061568][I tried `man alias`, but that doesn't even exist. It looks like maybe it's a built-in to bash itself?]]
  * [[https://twitter.com/GlitteryElf/status/938540426088214528][Update: I read into `man bash`, and I even found a section on ALIASES (starting with "Aliases allow a string to be substituted for a word when it is used as the first word of a simple command[...]" but I couldn't even make it 40 words in before I got all cross-eyed.]]

** Approach
   :PROPERTIES:
   :CUSTOM_ID: approach
   :END:

From the [[http://tldp.org/LDP/abs/html/aliases.html][Bash documentation]]:

#+BEGIN_QUOTE
A Bash alias is essentially nothing more than a keyboard shortcut, an abbreviation, a means of avoiding typing a long command sequence.
#+END_QUOTE

Here, however, aliases have been used to effectively disable =kill=
and its brethren. We need to figure out a way to run the real version
of =kill= instead of the aliased version. One way to do this is to use the =which= command:

#+BEGIN_SRC sh
elf@ce55bdd020e3:~$ which kill
/bin/kill
#+END_SRC

Using the full path to the binary will bypass the alias, and allow us to actually run =kill=.

#+BEGIN_SRC 
elf@ce55bdd020e3:~$ /bin/kill -h
Usage:
 kill [options] <pid> [...]
Options:
 <pid> [...]            send signal to every <pid> listed
 -<signal>, -s, --signal <signal>
                        specify the <signal> to be sent
 -l, --list=[<signal>]  list all signal names, or convert one to a name
 -L, --table            list all signal names in a nice table
 -h, --help     display this help and exit
 -V, --version  output version information and exit
For more details see kill(1).
#+END_SRC

All that's left is to determine the process ID (=pid=) of the process to be killed. We can use the =ps= command to determine this:

#+BEGIN_SRC 
elf@ce55bdd020e3:~$ ps axf
  PID TTY      STAT   TIME COMMAND
    1 pts/0    Ss     0:00 /bin/bash /sbin/init
    8 pts/0    S      0:00 /usr/bin/santaslittlehelperd
   11 pts/0    S      0:00 /sbin/kworker
   18 pts/0    S      0:01  \_ /sbin/kworker
   12 pts/0    S      0:00 /bin/bash
  649 pts/0    R+     0:00  \_ ps axf
elf@ce55bdd020e3:~$ /bin/kill 8
elf@ce55bdd020e3:~$ ps axf
  PID TTY      STAT   TIME COMMAND
    1 pts/0    Ss     0:00 /bin/bash /sbin/init
   12 pts/0    S      0:00 /bin/bash
  658 pts/0    R+     0:00  \_ ps axf
#+END_SRC

Santa's little helper is no more.

** Solution
   :PROPERTIES:
   :CUSTOM_ID: solution
   :END:

A one-liner is: ~/usr/bin/pkill -f santaslittlehelperd~. =pkill= can
kill a process by name, and the =-f= argument will have it match
against the full name of the process.

AsciiCinema video of the solution?

** Alternatives
   :PROPERTIES:
   :CUSTOM_ID: alternatives
   :END:

Another approach is simply to remove the alias, by using the unalias command:

#+BEGIN_SRC sh
elf@12952b040888:~$ unalias kill
elf@12952b040888:~$ ps axf
  PID TTY      STAT   TIME COMMAND
    1 pts/0    Ss     0:00 /bin/bash /sbin/init
    8 pts/0    S      0:00 /usr/bin/santaslittlehelperd
   11 pts/0    S      0:00 /sbin/kworker
   18 pts/0    S      0:00  \_ /sbin/kworker
   12 pts/0    S      0:00 /bin/bash
   31 pts/0    R+     0:00  \_ ps axf
elf@12952b040888:~$ kill 8
elf@12952b040888:~$ ps axf
  PID TTY      STAT   TIME COMMAND
    1 pts/0    Ss     0:00 /bin/bash /sbin/init
   12 pts/0    S      0:00 /bin/bash
   36 pts/0    R+     0:00  \_ ps axf
#+END_SRC

Alternatively, you could run =bash= with the =--norc= flag, which
prevents it from reading and executing the =~/.bashrc= file where the
aliases are added.

** Common Pitfalls
   :PROPERTIES:
   :CUSTOM_ID: common-pitfalls
   :END:

The fact that =kill= was aliased to =true= was problematic, because
=true= never returns any output. Thus, it would look like the =kill=
command worked, but the process would still be running. Running
something like =kill -h= would reveal that =kill= was not being run
correctly, since the help output would not be displayed.

