* Question
  :PROPERTIES:
  :CUSTOM_ID: off_question
  :END:

#+BEGIN_EXAMPLE

                     .--._.--.--.__.--.--.__.--.--.__.--.--._.--.
                   _(_      _Y_      _Y_      _Y_      _Y_      _)_
                  [___]    [___]    [___]    [___]    [___]    [___]
                  /:' \    /:' \    /:' \    /:' \    /:' \    /:' \
                 |::   |  |::   |  |::   |  |::   |  |::   |  |::   |
                 \::.  /  \::.  /  \::.  /  \::.  /  \::.  /  \::.  /
             jgs  \::./    \::./    \::./    \::./    \::./    \::./
                   '='      '='      '='      '='      '='      '='


    Wunorse Openslae has a special challenge for you.
    Run the given binary, make it return 42.
    Use the partial source for hints, it is just a clue.
    You will need to write your own code, but only a line or two.
#+END_EXAMPLE

* How to find the terminal
  :PROPERTIES:
  :CUSTOM_ID: off_how-to-find-the-terminal
  :END:

From this game: https://2017.holidayhackchallenge.com/game/30a9c19a-f931-4367-9922-d20b91314eec

Direct link: https://docker2017.holidayhackchallenge.com/?challenge=96452ffb-5153-4473-9fe4-f0ff7921308e&uid=USER_ID

#+BEGIN_CENTER
#+HTML: <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/NaNbpX8H03I?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
#+END_CENTER

#+CAPTION: The terminal is on a peak off to the side.
[[./images/terminal-location-off.png]]

* Background Information
  :PROPERTIES:
  :CUSTOM_ID: off_background-information
  :END:

We are logged in as the user =elf=.

The {{{abbr(Message of the Day, MOTD)}}} tells us:

#+BEGIN_QUOTE
Run the given binary, make it return 42.
Use the partial source for hints, it is just a clue.
You will need to write your own code, but only a line or two.
#+END_QUOTE

Two files are provided

#+BEGIN_SRC
-rwxr-xr-x 1 root root 84824 Dec 16 16:47 isit42
-rw-r--r-- 1 root root   654 Dec 15 19:59 isit42.c.un
#+END_SRC

* Goal
  :PROPERTIES:
  :CUSTOM_ID: off_goal
  :END:

For this challenge we need to write our own code in order to make the provided binary =isit42= return 42.

* Hints
  :PROPERTIES:
  :CUSTOM_ID: off_hints
  :END:

[[https://twitter.com/1Horse1OSSleigh][Wunorse Openslae (that's a stretch) on Twitter actually has no useful hints]]

This blog post, [[https://pen-testing.sans.org/blog/2017/12/06/go-to-the-head-of-the-class-ld-preload-for-the-win][Go To The Head Of The Class: LD_PRELOAD For The Win]], by Jeff McJunkin was useful.

* Approach
  :PROPERTIES:
  :CUSTOM_ID: off_approach
  :END:

[[https://ncsa.github.io/sans-holiday-hack-2016/#org42386a9][Our team actually did this exact thing last year in order to derandomize =wumpus=.]]

In this case looking at the source code we can identify the exact code that is being used to randomize the program:

#+BEGIN_SRC  c
int getrand() {
    srand((unsigned int)time(NULL)); 
    printf("Calling rand() to select a random number.\n");
    // The prototype for rand is: int rand(void);
    return rand() % 4096; // returns a pseudo-random integer between 0 and 4096
}
#+END_SRC

If we create our own library file to define =rand()= we can remove the randomness.

* Solution
  :PROPERTIES:
  :CUSTOM_ID: off_solution
  :END:

As mentioned in the hints section above, we can use [[https://pen-testing.sans.org/blog/2017/12/06/go-to-the-head-of-the-class-ld-preload-for-the-win][Jeff McJunkin's]] blog post for guidance on how to complete this challenge.

First we'll need to create our own library. We can call it 'rand.c'.

#+BEGIN_SRC c
int rand(unsigned int *seed) {
    return 42;
}
#+END_SRC

Then we compile it using the suggested flags in the article.

#+BEGIN_SRC
elf@784e43534178:~$ gcc -o rand -ldl -shared -fPIC rand.c
#+END_SRC

Once compiled we can then use LD_PRELOAD to load our library.

#+BEGIN_SRC
elf@784e43534178:~$ LD_PRELOAD=`pwd`/rand ./isit42
Starting up ... done.
Calling rand() to select a random number.
                 .-. 
                .;;\ ||           _______  __   __  _______    _______  __    _  _______  _     _  _______  ______ 
               /::::\|/          |       ||  | |  ||       |  |   _   ||  |  | ||       || | _ | ||       ||    _ |
              /::::'();          |_     _||  |_|  ||    ___|  |  |_|  ||   |_| ||  _____|| || || ||    ___||   | ||
            |\/`\:_/`\/|           |   |  |       ||   |___   |       ||       || |_____ |       ||   |___ |   |_||_ 
        ,__ |0_..().._0| __,       |   |  |       ||    ___|  |       ||  _    ||_____  ||       ||    ___||    __  |
         \,`////""""\\\\`,/        |   |  |   _   ||   |___   |   _   || | |   | _____| ||   _   ||   |___ |   |  | |
         | )//_ o  o _\\( |        |___|  |__| |__||_______|  |__| |__||_|  |__||_______||__| |__||_______||___|  |_|
          \/|(_) () (_)|\/ 
            \   '()'   /            ______    _______  _______  ___      ___      __   __    ___   _______ 
            _:.______.;_           |    _ |  |       ||   _   ||   |    |   |    |  | |  |  |   | |       |
          /| | /`\/`\ | |\         |   | ||  |    ___||  |_|  ||   |    |   |    |  |_|  |  |   | |  _____|
         / | | \_/\_/ | | \        |   |_||_ |   |___ |       ||   |    |   |    |       |  |   | | |_____ 
        /  |o`""""""""`o|  \       |    __  ||    ___||       ||   |___ |   |___ |_     _|  |   | |_____  |
       `.__/     ()     \__.'      |   |  | ||   |___ |   _   ||       ||       |  |   |    |   |  _____| |
       |  | ___      ___ |  |      |___|  |_||_______||__| |__||_______||_______|  |___|    |___| |_______|
       /  \|---|    |---|/  \ 
       |  (|42 | () | DA|)  |       _   ___  _______ 
       \  /;---'    '---;\  /      | | |   ||       |
        `` \ ___ /\ ___ / ``       | |_|   ||____   |
            `|  |  |  |`           |       | ____|  |
      jgs    |  |  |  |            |___    || ______| ___ 
       _._  |\|\/||\/|/|  _._          |   || |_____ |   |
      / .-\ |~~~~||~~~~| /-. \         |___||_______||___|
      | \__.'    ||    '.__/ |
       `---------''---------` 
Congratulations! You've won, and have successfully completed this challenge.
#+END_SRC

* Alternatives
  :PROPERTIES:
  :CUSTOM_ID: off_alternatives
  :END:

Another option is to just brute force it.  The sample code shows that the program is using

#+BEGIN_SRC c
    return rand() % 4096; // returns a pseudo-random integer between 0 and 4096
#+END_SRC

This means we should only need to run the program a few thousand times for the
result to be 42.  However, if we try to run the program too quickly, we notice
we get the same output each time:

#+BEGIN_SRC
elf@784e43534178:~$ ./isit42 & ./isit42 &
[1] 31
[2] 32
elf@784e43534178:~$ Starting up ... Starting up ... done.
Calling rand() to select a random number.
done.
Calling rand() to select a random number.
945 is not 42.
945 is not 42.
[1]-  Exit 177                ./isit42
[2]+  Exit 177                ./isit42
#+END_SRC


This is because the program uses the current timestamp in seconds as a random
seed. Running the program more than once a second will not help us.

If we run this:
#+BEGIN_SRC
elf@784e43534178:~$ while true;do ./isit42 ; done
#+END_SRC

We will get a different answer every time, but since the program contains a
sleep(3) that will only run one attempt every 3 seconds instead of one attempt
per second.  To fix this, we can run each attempt in the background using &,
sleeping 1 second between attempts:


#+BEGIN_SRC
elf@784e43534178:~$ while true;do ./isit42 &sleep 1;done
#+END_SRC

After a short wait, it succeeds:

#+BEGIN_SRC
Calling rand() to select a random number.
[860]   Exit 37                 ./isit42
[865] 1869
Starting up ... 3566 is not 42.
done.
Calling rand() to select a random number.
[861]   Exit 199                ./isit42
[866] 1871
Starting up ...                  .-.
                .;;\ ||           _______  __   __  _______    _______  __    _  _______  _     _  _______  ______
               /::::\|/          |       ||  | |  ||       |  |   _   ||  |  | ||       || | _ | ||       ||    _ |
              /::::'();          |_     _||  |_|  ||    ___|  |  |_|  ||   |_| ||  _____|| || || ||    ___||   | ||
            |\/`\:_/`\/|           |   |  |       ||   |___   |       ||       || |_____ |       ||   |___ |   |_||_
        ,__ |0_..().._0| __,       |   |  |       ||    ___|  |       ||  _    ||_____  ||       ||    ___||    __  |
         \,`////""""\\\\`,/        |   |  |   _   ||   |___   |   _   || | |   | _____| ||   _   ||   |___ |   |  | |
         | )//_ o  o _\\( |        |___|  |__| |__||_______|  |__| |__||_|  |__||_______||__| |__||_______||___|  |_|
#+END_SRC
